{"version":3,"sources":["components/strings.js","components/Home.js","components/constants.js","utils/firebaseConfig.js","components/AuthForm.js","App.js","index.js"],"names":["strings","login","logout","confirm","sendCode","hello","type","Home","location","useLocation","history","useHistory","useState","user","setUser","useEffect","state","authorized","onClick","replace","to","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","firebase","apps","length","initializeApp","AuthForm","captchaRef","useRef","code","setCode","codeFieldEnabled","enableCodeField","verificationId","setVerificationId","error","setError","console","log","className","preferredCountries","cfaSignIn","phone","subscribe","phoneNumber","cfaSignInPhoneOnCodeSent","a","value","onChange","numInputs","credential","auth","PhoneAuthProvider","signInWithCredential","then","push","pathname","catch","message","id","ref","App","props","path","exact","Component","ReactDOM","render","basename","document","getElementById"],"mappings":"oRAUeA,EAVC,CACdC,MAAO,QACPC,OAAQ,SACRC,QAAS,UACTC,SAAU,YACVC,MAAO,SAACC,GACN,MAAM,UAAN,OAAiBA,EAAjB,Y,OC+BWC,EA9BF,WACX,IAAMC,EAAWC,cACXC,EAAUC,cAFC,EAGOC,mBAAS,MAHhB,mBAGVC,EAHU,KAGJC,EAHI,KAgBjB,OAZAC,qBAAU,WAAO,IAAD,EACdD,EAAO,OAACN,QAAD,IAACA,GAAD,UAACA,EAAUQ,aAAX,aAAC,EAAiBC,cACxB,CAACT,IAWF,gCACE,6BAAKR,EAAQK,MAAMQ,ECzBC,aACE,kBDyBpBA,EAKA,wBAAQK,QAhBd,WACEJ,EAAQ,MACRJ,EAAQS,QAAR,2BACKT,EAAQF,UADb,IAEEQ,MAAO,CAAEC,YAAY,OAYnB,SAA0BjB,EAAQE,SAJlC,cAAC,IAAD,CAAMkB,GAAG,QAAT,SACE,iCAASpB,EAAQC,c,wCEnBZoB,G,MATQ,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8C,kCCSHC,G,YAAOC,IAASC,KAAKC,OAEvBF,IAASD,MADTC,IAASG,cAAcX,IAiHZY,EA9GE,WACf,IAAMC,EAAaC,iBAAO,MACpBzB,EAAUC,cAFK,EAGGC,mBAAS,MAHZ,mBAGdwB,EAHc,KAGRC,EAHQ,OAIuBzB,oBAAS,GAJhC,mBAId0B,EAJc,KAIIC,EAJJ,OAKuB3B,mBAAS,MALhC,mBAKd4B,EALc,KAKEC,EALF,OAOK7B,mBAAS,MAPd,mBAOd8B,EAPc,KAOPC,EAPO,KASrB5B,qBAAU,WAYR6B,QAAQC,IAAI,oBAAqBL,MA+DnC,OACE,gCACE,0DACA,iDACA,sBAAKM,UAAU,iBAAf,UACE,cAAC,IAAD,CAAcC,mBAAoB,CAAC,QACnC,wBAAQ7B,QAlEG,WACf8B,YAAU,QAAS,CAAEC,MAAO,iBAAkBC,WAC5C,SAACrC,GACC+B,QAAQC,IAAIhC,EAAKsC,aACjBZ,GAAgB,MAGpBa,cAA2BF,UAA3B,uCAAqC,WAAOV,GAAP,SAAAa,EAAA,sDACnCT,QAAQC,IAAI,4BACZJ,EAAkBD,GAClBI,QAAQC,IAAIL,GACZD,GAAgB,GAJmB,2CAArC,wDA2DI,SAA4BvC,EAAQI,cAEtC,kDAAqBoC,KACpBF,GACC,gCACE,sDACA,sBAAKQ,UAAU,iBAAf,UACE,cAAC,IAAD,CAAUQ,MAAOlB,EAAMmB,SAAUlB,EAASmB,UAAW,IACrD,wBAAQtC,QA9ClB,WACE,IAAIuC,EAAa5B,IAAS6B,KAAKC,kBAAkBF,WAC/CjB,EACAJ,GAEFR,EACG8B,OACAE,qBAAqBH,GACrBI,MAAK,WACJnD,EAAQoD,KAAK,CACXC,SAAU,IACV/C,MAAO,CAAEC,YAAY,QAGxB+C,OAAM,SAAUtB,GACfC,GAAc,OAALD,QAAK,IAALA,OAAA,EAAAA,EAAOuB,UAAW,4BA+BvB,SAA+BjE,EAAQG,aAEzC,4BAAIuC,OAGR,qBAAKwB,GAAG,sBAAsBC,IAAKjC,QC/F1BkC,G,wDApBb,WAAYC,GAAQ,uCACZA,G,0CAGR,WACE,OACE,qBAAKvB,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwB,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,QAAZ,SACE,cAAC,EAAD,e,GAbME,cCClBC,IAASC,OACP,cAAC,IAAD,CAAQC,SAAS,YAAjB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a97f8a45.chunk.js","sourcesContent":["const strings = {\n  login: 'Login',\n  logout: 'Logout',\n  confirm: 'Confirm',\n  sendCode: 'Send code',\n  hello: (type) => {\n    return `Hello, ${type} user!`;\n  },\n};\n\nexport default strings;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport { AUTHORIZED, UNAUTHORIZED } from './constants';\nimport strings from './strings';\n\nconst Home = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    setUser(location?.state?.authorized);\n  }, [location]);\n\n  function logout() {\n    setUser(null);\n    history.replace({\n      ...history.location,\n      state: { authorized: false },\n    });\n  }\n\n  return (\n    <div>\n      <h2>{strings.hello(user ? AUTHORIZED : UNAUTHORIZED)}</h2>\n      {!user ? (\n        <Link to=\"/form\">\n          <button>{strings.login}</button>\n        </Link>\n      ) : (\n        <button onClick={logout}>{strings.logout}</button>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","export const AUTHORIZED = 'authorized';\nexport const UNAUTHORIZED = 'unauthorized';\n","const firebaseConfig = {\n  apiKey: 'AIzaSyB-AP60--UWIYzcmY0vmGO6VfCNvd1ifJw',\n  authDomain: 'test-pwa-f0d45.firebaseapp.com',\n  projectId: 'test-pwa-f0d45',\n  storageBucket: 'test-pwa-f0d45.appspot.com',\n  messagingSenderId: '979178375166',\n  appId: '1:979178375166:web:d713855290c3a8ce05a2af',\n};\n\nexport default firebaseConfig;\n","import React, { useRef, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  cfaSignIn,\n  cfaSignInPhoneOnCodeSent,\n} from 'capacitor-firebase-auth';\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport firebaseConfig from '../utils/firebaseConfig';\nimport OtpInput from 'react-otp-input';\nimport IntlTelInput from 'react-intl-tel-input';\nimport 'react-intl-tel-input/dist/main.css';\nimport strings from './strings';\nimport './styles.css';\n\nconst app = !firebase.apps.length\n  ? firebase.initializeApp(firebaseConfig)\n  : firebase.app();\n\nconst AuthForm = () => {\n  const captchaRef = useRef(null);\n  const history = useHistory();\n  const [code, setCode] = useState(null);\n  const [codeFieldEnabled, enableCodeField] = useState(false);\n  const [verificationId, setVerificationId] = useState(null);\n  // const [confirmation, setConfirmation] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // //react.js implementation\n    // window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\n    //   'recaptcha-container',\n    //   {\n    //     size: 'invisible',\n    //     callback: function () {\n    //       onFinish();\n    //     },\n    //   },\n    // );\n\n    console.log('verification Id->', verificationId);\n  });\n\n  const sendCode = () => {\n    cfaSignIn('phone', { phone: '+16505551234' }).subscribe(\n      (user) => {\n        console.log(user.phoneNumber);\n        enableCodeField(true);\n      },\n    );\n    cfaSignInPhoneOnCodeSent().subscribe(async (verificationId) => {\n      console.log('cfaSignInPhoneOnCodeSent');\n      setVerificationId(verificationId);\n      console.log(verificationId);\n      enableCodeField(true);\n    });\n\n    // //react.js implementation\n    // var appVerifier = window.recaptchaVerifier;\n    // app\n    //   .auth()\n    //   .signInWithPhoneNumber('+16505551234', appVerifier)\n    //   .then(function (confirmation) {\n    //     setConfirmation(confirmation);\n    //     enableCodeField(true);\n    //   })\n    //   .catch(function (error) {\n    //     console.log('error2->', error);\n    //   });\n  };\n\n  function confirmCode() {\n    var credential = firebase.auth.PhoneAuthProvider.credential(\n      verificationId,\n      code,\n    );\n    app\n      .auth()\n      .signInWithCredential(credential)\n      .then(function () {\n        history.push({\n          pathname: '/',\n          state: { authorized: true },\n        });\n      })\n      .catch(function (error) {\n        setError(error?.message || 'something went wrong');\n      });\n\n    // //react.js implementation\n    // confirmation\n    //   .confirm(code)\n    //   .then(function () {\n    //     history.push({\n    //       pathname: '/',\n    //       state: { authorized: true },\n    //     });\n    //   })\n    //   .catch(function (error) {\n    //     setError(error?.message || 'something went wrong');\n    //   });\n  }\n\n  return (\n    <div>\n      <h2>Auth form with recaptcha</h2>\n      <label>Phone number</label>\n      <div className=\"inputContainer\">\n        <IntlTelInput preferredCountries={['us']} />\n        <button onClick={sendCode}>{strings.sendCode}</button>\n      </div>\n      <p>Verification id: {verificationId}</p>\n      {codeFieldEnabled && (\n        <div>\n          <label>Confirmation code</label>\n          <div className=\"inputContainer\">\n            <OtpInput value={code} onChange={setCode} numInputs={6} />\n            <button onClick={confirmCode}>{strings.confirm}</button>\n          </div>\n          <p>{error}</p>\n        </div>\n      )}\n      <div id=\"recaptcha-container\" ref={captchaRef}></div>\n    </div>\n  );\n};\n\nAuthForm.propTypes = {};\n\nexport default AuthForm;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './components/Home.js';\nimport AuthForm from './components/AuthForm.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/form\">\n            <AuthForm />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router basename=\"/test-pwa\">\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n\n// reportWebVitals();\n"],"sourceRoot":""}